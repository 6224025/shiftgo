version: '3.8' # または適切なバージョンを指定

services:
  # Goアプリケーションサービス
  app:
    build: . # カレントディレクトリのDockerfileを使ってビルドする
    ports:
      - "8080:8080" # ホストの8080をコンテナの8080にマッピング
    environment:
      # GoアプリからDBに接続するための環境変数 (例)
      - DB_HOST=db # 下で定義するDBサービスのサービス名
      - DB_PORT=5432
      - DB_USER=user # 下のDBサービスで設定するユーザー名
      - DB_PASSWORD=password # 下のDBサービスで設定するパスワード
      - DB_NAME=mydatabase # 下のDBサービスで設定するDB名
    depends_on:
      - db # DBサービスが起動してからappサービスを起動する

  # PostgreSQLサービス
  db:
    image: postgres:16-alpine # 公式のPostgreSQLイメージを使用 (バージョンは適宜変更)
    restart: always # コンテナが停止したら常に再起動する
    environment:
      POSTGRES_USER: user # データベースのユーザー名
      POSTGRES_PASSWORD: password # データベースのパスワード
      POSTGRES_DB: mydatabase # 作成するデータベース名
    volumes:
      - postgres_data:/var/lib/postgresql/data # 名前付きボリュームでデータを永続化
    ports:
      - "5433:5432" # ホストの5433をコンテナの5432にマッピング (デバッグ用、必須ではない)

volumes:
  postgres_data: # データ永続化のための名前付きボリューム定義
